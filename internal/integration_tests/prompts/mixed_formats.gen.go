// Code generated by dotprompt-gen-go dev. DO NOT EDIT.

package prompts

import "fmt"

// MixedFormatsInput represents the input for mixed formats
type MixedFormatsInput struct {
	UserId      string   `json:"user_id"`
	Preferences any      `json:"preferences"`
	Role        RoleEnum `json:"role"`
	Settings    any      `json:"settings"`
}

// MixedFormatsOutput represents the output for mixed formats
type MixedFormatsOutput struct {
	UserProfile     UserProfile `json:"user_profile"`
	Recommendations []string    `json:"recommendations"`
	Success         bool        `json:"success"`
}

// UserProfile represents
type UserProfile struct {
	Id       *string       `json:"id"`
	UserRole *UserRoleEnum `json:"user_role"`
}

// RoleEnum represents valid role values
type RoleEnum string

const (
	RoleEnumAdmin RoleEnum = "admin"
	RoleEnumUser  RoleEnum = "user"
	RoleEnumGuest RoleEnum = "guest"
)

// Validate checks if the RoleEnum value is valid
func (e RoleEnum) Validate() error {
	switch e {
	case RoleEnumAdmin, RoleEnumUser, RoleEnumGuest:
		return nil
	default:
		return fmt.Errorf("invalid RoleEnum value: %q, must be one of: admin, user, guest", string(e))
	}
}

// UserRoleEnum represents valid user_role values
type UserRoleEnum string

const (
	UserRoleEnumAdmin UserRoleEnum = "admin"
	UserRoleEnumUser  UserRoleEnum = "user"
	UserRoleEnumGuest UserRoleEnum = "guest"
)

// Validate checks if the UserRoleEnum value is valid
func (e UserRoleEnum) Validate() error {
	switch e {
	case UserRoleEnumAdmin, UserRoleEnumUser, UserRoleEnumGuest:
		return nil
	default:
		return fmt.Errorf("invalid UserRoleEnum value: %q, must be one of: admin, user, guest", string(e))
	}
}
