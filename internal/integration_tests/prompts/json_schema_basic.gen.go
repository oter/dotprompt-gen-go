// Code generated by dotprompt-gen-go dev. DO NOT EDIT.

package prompts

import "fmt"
import "github.com/oter/dotprompt-gen-go/pkg/validator"

// JsonSchemaBasicInput represents the input for json schema basic
type JsonSchemaBasicInput struct {
	// The habit to analyze
	Habit string `json:"habit"`
	// Habit category
	HabitCategory HabitCategoryEnum `json:"habit_category"`
	// Number of words
	WordCount int `json:"word_count"`
}

// JsonSchemaBasicOutput represents the output for json schema basic
type JsonSchemaBasicOutput struct {
	// Confidence score
	Confidence *float64 `json:"confidence"`
	// Generated summary
	Summary string `json:"summary"`
	// Whether the input is valid
	Valid bool `json:"valid"`
}

// Validate validates all fields in JsonSchemaBasicInput
func (s JsonSchemaBasicInput) Validate() error {
	fieldValidations := map[string]validator.Validator{
		"habit_category": s.HabitCategory,
	}
	return validator.ValidateFields(fieldValidations)
}

// Validate validates all fields in JsonSchemaBasicOutput
func (s JsonSchemaBasicOutput) Validate() error {
	return nil
}

// HabitCategoryEnum represents valid habit_category values
type HabitCategoryEnum string

const (
	HabitCategoryEnumPhysical HabitCategoryEnum = "physical"
	HabitCategoryEnumMental   HabitCategoryEnum = "mental"
	HabitCategoryEnumSocial   HabitCategoryEnum = "social"
)

// Validate checks if the HabitCategoryEnum value is valid
func (e HabitCategoryEnum) Validate() error {
	switch e {
	case HabitCategoryEnumPhysical, HabitCategoryEnumMental, HabitCategoryEnumSocial:
		return nil
	default:
		return fmt.Errorf("invalid HabitCategoryEnum value: %q, must be one of: physical, mental, social", string(e))
	}
}
